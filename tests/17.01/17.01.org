#+TITLE: Виды Тестирования
#+AUTHOR: Егор кормышев
#+DATE: 17.01
#+LANGUAGE: ru
#+LaTeX_HEADER: \usepackage[russian]{babel}

* Уровни тестирования

1) Модульные тесты (Unit-тесты)
2) Интеграционные тесты
3) Системные тесты
4) Приемочные тесты (End-to-End)

** Требования к уровням тестирования:

1) Тест должен быть на том же уровне, что и тестируемый объект
2) Тесты уровнем выше не проверяют логику тестов уровнем ниже
3) Чем выше тесты уровня, тем сложнее их реализация, критичнее для бизнеса, медленнее прохождение
	


** Модульное (Unit) тестирование

На уровне тестируют атомарные части кода (классы, функции, методы классов)

** Интеграционное тестирование

*** Сверху вниз

Проверяют взаимосвязь модулей и их интеграцию с системой (БД, сеть) \\
Сначала проверяют крупные модули, затем модули уровнем ниже \\
На этапе проверки уровнем выше данные, необходимые уровнем ниже симулируются

*** Снизу вверх

Все части модуля собираются в модуль \\
Все мелкие модули собирваются в 1 большой и тестируются с предыдущим

*** Большой взрыв

Собирают все реализованные модули всех уровней \\
Интегрируем все и тестируем все 

** Системное тестирование

Проверяет взаимодействие тестируемого с системой ПО по функциональным и нефункциональным требованиям
c максимально приближенным окружением,
которое будет у конечного пользователя

** Приемочное (E2E) тестирование

Проверяет соответствие требованиям


* Классификация видов тестирования

** По доступности кода:

1) Черный ящик (Black Box) - не знаем код
2) Белый ящик (White Box)	- знаем код
3) Серый ящик (Gray Box)	- частично знаем код

*** Пример черного ящика

#+begin_src opascal
procedure t (a,b:real, var x:real)
begin
	if (a>1) and (b=0) then x:=x/a;
	if (a=2) or (x>1) then x:=x+1;
	
end  
#+end_src
	



** По объекту тестирования:

1) Функциональное тестирование
	1) Тестирование требований
	2) Тестирование безопасности

